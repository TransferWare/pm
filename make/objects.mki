# ---------------------------------------------------------------------------- #
#
# $Header$
#
# Author:       Gert-Jan Paulissen
#
# Purpose:      Definition file for Oracle database objects in 
#		Performance Monitor project.
#
# Parameters:   
#		
# Notes:	
#
# History
# -------
#
# ---------------------------------------------------------------------------- #
 
# Do not include pm_mpi.pkb since only specification is important
# Do not include pm_dpi.pkb since only specification is important

# Files pm_system_event.ind, pm_sysstat.ind and pm_sqlarea.ind have
# no SQL DDL statements to execute.

OBJECTS_SCRIPTS = \
	     pm_config.tab \
	     pm_run.tab \
	     pm_session.tab \
	     pm_session_tmp.tab \
	     pm_sql.tab \
	     pm_sqlarea.tab \
	     pm_sqlarea_tmp.tab \
	     pm_sql_current.tab \
	     pm_sql_id.tab \
	     pm_sysstat.tab \
	     pm_sysstat_tmp.tab \
	     pm_system_event.tab \
	     pm_system_event_tmp.tab \
	     pm_vw_sqlarea.vw \
	     pm_run_seq.seq \
	     pm_sql_seq.seq \
	     trc.pck \
	     pm.pck \
	     pm_cfg.pck \
	     pm_mpi.pks \
	     pm_dpi.pks \
	     pm_config.con \
	     pm_run.con \
	     pm_sql_id.con \
	     pm_sql.con \
	     pm_session.con \
	     pm_session_tmp.con \
	     pm_sql_current.con \
	     pm_sysstat.con \
	     pm_sysstat_tmp.con \
	     pm_system_event.con \
	     pm_system_event_tmp.con \
	     pm_sqlarea.con \
	     pm_sqlarea_tmp.ind \
	     pm_run.ind \
	     pm_session.ind \
	     pm_sql.ind \
	     $(ENDOFLIST)

# No insert for PM
DATA = 

HTML_FILES = \
	trc.html \
	pm.html \
	pm_cfg.html \
	pm_mpi.html \
	pm_dpi.html \
	$(ENDOFLIST)

install.html: $(HTML_FILES:html=html-install)

HTML_DIR := $(WKTOP)/html

$(HTML_FILES:html=html-install): $(HTML_DIR)

$(HTML_DIR):
	@$(MKDIR) $(subst /,$(PATHSEP),$@)

$(HTML_FILES:html=html-install): override INSTALL_DIR := $(HTML_DIR)

# ---------------------------------------------------------------------------- #
# Gsk
# ---------------------------------------------------------------------------- #

ifneq ($(findstring $(GSK), Y y),)

OBJECTS_SCRIPTS_GSK = \
	cgrefcod.tab \
	gskdb.tab \
	gskdb.con \
	gskdb.pck \
	$(ENDOFLIST)

DATA_GSK = gskdbfill.sql-run

DATA += $(DATA_GSK)

gskdbfill.sql:: gsk_refc.dat
	$(ECHO) @@ $? > $@

gskdbfill.sql:: gskdb.dat
	$(ECHO) @@ $? >> $@

.INTERMEDIATE: gskdbfill.sql

# ---------------------------------------------------------------------------- #
# GSK dependencies
# ---------------------------------------------------------------------------- #

DEPEND_OBJECTS_FILE_GSK_MKI := $(CFGDIR)/depend.objects.file.gsk.mki

DEPEND_OBJECTS_DB_GSK_MKI := $(CFGDIR)/depend.objects.db.gsk.mki

depend.objects.gsk: depend.objects.file.gsk

DEPEND_OBJECTS_FILE += depend.objects.file.gsk

LIST_FILES += depend.objects.file.gsk.list

depend.objects.file.gsk.list: override LIST_FILE := depend.objects.file.gsk.list

depend.objects.file.gsk.list: $(addsuffix -list, $(OBJECTS_SCRIPTS_GSK))

depend.objects.file.gsk: override SCHEMA := pm_owner

depend.objects.file.gsk: override DEPEND_OBJECTS_FILE_MKI := $(DEPEND_OBJECTS_FILE_GSK_MKI)

depend.objects.check: $(DEPEND_OBJECTS_FILE_GSK_MKI)

ifeq ($(findstring $(DEPEND),N n),)

include $(DEPEND_OBJECTS_FILE_GSK_MKI)

endif

OBJECTS_GSK := $(OBJECTS_PM_OWNER)

install.objects.gsk: $(addprefix install., $(OBJECTS_GSK))

uninstall.objects.gsk: $(addprefix uninstall., $(OBJECTS_GSK))

endif

# ---------------------------------------------------------------------------- #
# End of gsk
# ---------------------------------------------------------------------------- #

# ---------------------------------------------------------------------------- #
# Build dependencies, e.g. create object X by running script Y
# ---------------------------------------------------------------------------- #

DEPEND_OBJECTS_FILE += depend.objects.file

LIST_FILES += depend.objects.file.list

DEPEND_OBJECTS_DB += depend.objects.db

DEPEND_OBJECTS_CHECK += depend.objects.check

depend.objects.file: override SCHEMA := pm_owner

ifeq ($(findstring $(DEPEND),N n),)

include $(CFGDIR)/depend.objects.file.mki

OBJECTS := $(OBJECTS_PM_OWNER)

endif

# ---------------------------------------------------------------------------- #
# Database object dependencies, e.g. foreign key X depends on primary key Y
# ---------------------------------------------------------------------------- #

ifeq ($(findstring $(DEPEND),N n),)

include $(CFGDIR)/depend.objects.db.mki

endif

